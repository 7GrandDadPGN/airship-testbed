-- Compiled with unity-ts v2.1.0-57
local MapUtil = {}
do
	local _container = MapUtil
	--[[
		*
		* Will either get the value at key or if none exists it will set to provided default
		*
		* @returns new entry
	]]
	local function getOrCreate(map, key, initValue)
		local _map = map
		local _key = key
		local existing = _map[_key]
		if existing ~= 0 and (existing == existing and (existing ~= "" and existing)) then
			return existing
		end
		local _map_1 = map
		local _key_1 = key
		local _initValue = initValue
		_map_1[_key_1] = _initValue
		return initValue
	end
	_container.getOrCreate = getOrCreate
	local function values(map)
		local result = {}
		for _k, _v in map do
			local entry = { _k, _v }
			local val = entry[2]
			table.insert(result, val)
		end
		return result
	end
	_container.values = values
	local function keys(map)
		local result = {}
		for _k, _v in map do
			local entry = { _k, _v }
			local _arg0 = entry[1]
			table.insert(result, _arg0)
		end
		return result
	end
	_container.keys = keys
	local function entries(map)
		local result = {}
		for _k, _v in map do
			local entry = { _k, _v }
			local _arg0 = { entry[1], entry[2] }
			table.insert(result, _arg0)
		end
		return result
	end
	_container.entries = entries
end
return {
	MapUtil = MapUtil,
}
-- ----------------------------------
-- ----------------------------------
